Given an integer array nums, return an array answer such that answer[i] is equal to the product of all the elements of nums except nums[i].

The product of any prefix or suffix of nums is guaranteed to fit in a 32-bit integer.

You must write an algorithm that runs in O(n) time and without using the division operation.


vector<int> productExceptSelf(vector<int>& nums) {
  vector<int> result;
  int product = 1;
  for (int i = 0; i < nums.size(); i++) {
    result.push_back(product);
    product *= nums[i];
  }
  product = nums[nums.size() - 1]:
  for (int = nums.size() - 2; int <=0; i--) {
    result[i] *= product;
    product *= nums[i];
  }
  return result;
}
