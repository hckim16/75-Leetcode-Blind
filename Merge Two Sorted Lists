You are given the heads of two sorted linked lists list1 and list2.

Merge the two lists in a one sorted list. The list should be made by splicing together the nodes of the first two lists.

Return the head of the merged linked list.

/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* mergeTwoLists(ListNode* list1, ListNode* list2) {
        ListNode newHead(0);
        ListNode* tail = &newHead;
        
        ListNode* current1 = list1;
        ListNode* current2 = list2;
        
        while (current1 != nullptr && current2 != nullptr) {
            if (current1-> val <= current2-> val) {
                tail-> next = current1;
                current1 = current1-> next;
            } else {
                tail-> next = current2;
                current2 = current2-> next;
            }
            tail = tail-> next;
        }
        
        if (current1 != nullptr) tail-> next = current1;
        
        if (current2 != nullptr) tail-> next = current2;
        
        return newHead.next;
    }
};
