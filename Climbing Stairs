You are climbing a staircase. It takes n steps to reach the top.

Each time you can either climb 1 or 2 steps. In how many distinct ways can you climb to the top?

class Solution {
public:

  int climbStairs(int n, unordered_map<int,int>& memo) {
        if (memo.count(n) > 0) return memo[n];
        if (n <= 3) return n;     
        memo[n] = climbStairs(n-1, memo) + climbStairs(n-2, memo);
        return memo[n];
    }
    
    int climbStairs(int n) {
        unordered_map<int,int> memo; 
        return climbStairs(n, memo);
    }
};
