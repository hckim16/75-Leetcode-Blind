Given the head of a linked list, remove the nth node from the end of the list and return its head.

/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* removeNthFromEnd(ListNode* head, int n) {
        ListNode dummyHead(0);
        dummyHead.next = head;
        ListNode* fast = &dummyHead;
        ListNode* slow = &dummyHead;
        
        while (fast-> next != nullptr) {
            fast = fast-> next;
            if (n-- <= 0) {
                slow = slow-> next;
            }
        }
        slow-> next = slow-> next-> next;
        
        return dummyHead.next;
    }
};
